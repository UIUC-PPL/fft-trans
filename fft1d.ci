mainmodule fft1d {

  readonly CProxy_Main mainProxy;
  readonly int numChares;
  readonly uint64_t N;
  readonly CProxy_GroupMeshStreamer<fftBuf> aggregator;

  mainchare Main {
    entry Main(CkArgMsg *m);
    entry [reductiontarget] void FFTReady();
    entry [reductiontarget] void FFTDone();
    entry [reductiontarget] void printResidual(double residual);
  };

  group fft : MeshStreamerGroupClient<fftBuf> {
    entry fft();
    entry void initValidation();
    entry void sendData();
    entry void transposeDone();

    entry void doFFT() {
      for(iteration = 0; iteration < 3; ++iteration) {
        serial "transpose" {
          if(thisIndex == 0)
            CkPrintf("TRANSPOSING\n");
          sendTranspose(iteration == 0 ? in : out);
        }

        when transposeDone () serial "compute" {
          if (iteration < 2) {
            fftw_execute(p1);
            if(iteration == 0)
              twiddle(validating ? 1 : -1);
          }
        }
      }

      serial {
        if(!validating)
          contribute(CkCallback(CkReductionTarget(Main,FFTDone), mainProxy));
        else {
          char filename[80];
          sprintf(filename, "%d-%ld.dump%d", numChares, N, thisIndex);
          writeCommFile(n, in, filename);
          calcResidual();
        }
      }
    };
   };

   message MeshStreamerMessage<fftBuf>;
   group MeshStreamerGroupClient<fftBuf>;
   group GroupMeshStreamer<fftBuf>;
   group MeshStreamer<fftBuf>;
};
