mainmodule fft1d {
  extern module fft;

  mainchare Main {
    entry Main(CkArgMsg *m);
    entry [reductiontarget] void startTimer();
    entry [reductiontarget] void stopTimer();
    entry [reductiontarget] void startValidate();
    entry [reductiontarget] void validateDone();
    entry [reductiontarget] void doneSwap();
    entry [reductiontarget] void printResidual(double r);

    entry void validate() {
      serial {
        data.swap(CkCallback(CkReductionTarget(Main,doneSwap), thisProxy));
        init(FFTW_BACKWARD, CkCallback(CkReductionTarget(Main,startValidate), thisProxy));
      }

      when doneSwap(), startValidate() serial {
        fftProxy.doFFT(CkCallback(CkReductionTarget(Main,validateDone), thisProxy), streamer);
      }

      when validateDone() serial {
        data.calcResidual(CkCallback(CkReductionTarget(Main,printResidual), thisProxy));
      }

      when printResidual(double r) serial { CkPrintf("residual = %g\n", r); CkExit(); }
    };
  };
};

module fftData {
  group fftData {
    entry fftData(uint64_t N);
    entry void swap(CkCallback cb);
    entry void calcResidual(CkCallback cb);
  };
};
